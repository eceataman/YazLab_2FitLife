@model WebApplication1.Models.ExerciseProgram

@{
    ViewBag.Title = "Add Exercise Program";
}

<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <title>Add Exercise Program</title>
    <link rel="stylesheet" href="style.css">
    <style>
        body {
            font-family: fantasy;
            background: url('../img/fitness.jpg') center/cover no-repeat;
        }

        h2 {
            color: black;
            text-align: center;
            margin-top: 50px;
        }

        .form-horizontal {
            background-color: #fff;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.1);
            margin: 20px auto;
            width: 80%;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            font-weight: bold;
            color: #262626;
        }

        .control-label {
            font-weight: bold;
            color: #262626;
        }

        .col-md-10 {
            border-radius: 15px;
        }

        .btn-primary {
            background-color: #c850c0;
            color: black;
            padding: 8px 12px;
            border-radius: 5px;
            text-decoration: none;
            display: inline-block;
        }

            .btn-primary:hover {
                background-color: #ad3a8f;
            }

            .btn-primary:active {
                transform: scale(0.95);
            }
    </style>
</head>
<body>
    <h2>EGZERSİZ PROGRAMI</h2>

    @using (Html.BeginForm("AddExerciseProgram", "Coach", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.UserId)

        <div class="form-horizontal">
            <!-- Add input fields for the exercise program information -->
            <!-- Similar to what you did in the Profile.cshtml for Coach information -->

            <div class="form-group">
                @Html.LabelFor(model => model.ExerciseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExerciseName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExerciseName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SetNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SetNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SetNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RepeatNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RepeatNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RepeatNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProgramDuration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProgramDuration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProgramDuration, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StartingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartingDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.StartingDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.VideoGuide, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VideoGuide, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoGuide, "", new { @class = "text-danger" })
                </div>
            </div>
            <!-- Add other input fields as needed -->

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add Exercise Program" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div>
        @ViewBag.SuccessMessage
    </div>

    <div>
        @Html.ActionLink("Profile Dön", "Profile", "Coach")
    </div>
</body>
</html>
